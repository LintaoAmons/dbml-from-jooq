/*
 * This file is generated by jOOQ.
 */
package top.oatnil.dbmlfromjooq.demo.generated;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.AggregateFunction;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;

import top.oatnil.dbmlfromjooq.demo.generated.routines.GetCustomerBalance;
import top.oatnil.dbmlfromjooq.demo.generated.routines.GroupConcat;
import top.oatnil.dbmlfromjooq.demo.generated.routines.InventoryHeldByCustomer;
import top.oatnil.dbmlfromjooq.demo.generated.routines.InventoryInStock;
import top.oatnil.dbmlfromjooq.demo.generated.routines.LastDay;
import top.oatnil.dbmlfromjooq.demo.generated.routines._GroupConcat;
import top.oatnil.dbmlfromjooq.demo.generated.tables.FilmInStock;
import top.oatnil.dbmlfromjooq.demo.generated.tables.FilmNotInStock;
import top.oatnil.dbmlfromjooq.demo.generated.tables.RewardsReport;
import top.oatnil.dbmlfromjooq.demo.generated.tables.records.FilmInStockRecord;
import top.oatnil.dbmlfromjooq.demo.generated.tables.records.FilmNotInStockRecord;
import top.oatnil.dbmlfromjooq.demo.generated.tables.records.RewardsReportRecord;


/**
 * Convenience access to all stored procedures and functions in the default
 * schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>_group_concat</code>
     */
    public static String _GroupConcat(
          Configuration configuration
        , String __1
        , String __2
    ) {
        _GroupConcat f = new _GroupConcat();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>_group_concat</code> as a field.
     */
    public static Field<String> _GroupConcat(
          String __1
        , String __2
    ) {
        _GroupConcat f = new _GroupConcat();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>_group_concat</code> as a field.
     */
    public static Field<String> _GroupConcat(
          Field<String> __1
        , Field<String> __2
    ) {
        _GroupConcat f = new _GroupConcat();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>get_customer_balance</code>
     */
    public static BigDecimal getCustomerBalance(
          Configuration configuration
        , Integer pCustomerId
        , LocalDateTime pEffectiveDate
    ) {
        GetCustomerBalance f = new GetCustomerBalance();
        f.setPCustomerId(pCustomerId);
        f.setPEffectiveDate(pEffectiveDate);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>get_customer_balance</code> as a field.
     */
    public static Field<BigDecimal> getCustomerBalance(
          Integer pCustomerId
        , LocalDateTime pEffectiveDate
    ) {
        GetCustomerBalance f = new GetCustomerBalance();
        f.setPCustomerId(pCustomerId);
        f.setPEffectiveDate(pEffectiveDate);

        return f.asField();
    }

    /**
     * Get <code>get_customer_balance</code> as a field.
     */
    public static Field<BigDecimal> getCustomerBalance(
          Field<Integer> pCustomerId
        , Field<LocalDateTime> pEffectiveDate
    ) {
        GetCustomerBalance f = new GetCustomerBalance();
        f.setPCustomerId(pCustomerId);
        f.setPEffectiveDate(pEffectiveDate);

        return f.asField();
    }

    /**
     * Get <code>group_concat</code> as a field.
     */
    public static AggregateFunction<String> groupConcat(
          String __1
    ) {
        GroupConcat f = new GroupConcat();
        f.set__1(__1);

        return f.asAggregateFunction();
    }

    /**
     * Get <code>group_concat</code> as a field.
     */
    public static AggregateFunction<String> groupConcat(
          Field<String> __1
    ) {
        GroupConcat f = new GroupConcat();
        f.set__1(__1);

        return f.asAggregateFunction();
    }

    /**
     * Call <code>inventory_held_by_customer</code>
     */
    public static Integer inventoryHeldByCustomer(
          Configuration configuration
        , Integer pInventoryId
    ) {
        InventoryHeldByCustomer f = new InventoryHeldByCustomer();
        f.setPInventoryId(pInventoryId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>inventory_held_by_customer</code> as a field.
     */
    public static Field<Integer> inventoryHeldByCustomer(
          Integer pInventoryId
    ) {
        InventoryHeldByCustomer f = new InventoryHeldByCustomer();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Get <code>inventory_held_by_customer</code> as a field.
     */
    public static Field<Integer> inventoryHeldByCustomer(
          Field<Integer> pInventoryId
    ) {
        InventoryHeldByCustomer f = new InventoryHeldByCustomer();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Call <code>inventory_in_stock</code>
     */
    public static Boolean inventoryInStock(
          Configuration configuration
        , Integer pInventoryId
    ) {
        InventoryInStock f = new InventoryInStock();
        f.setPInventoryId(pInventoryId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>inventory_in_stock</code> as a field.
     */
    public static Field<Boolean> inventoryInStock(
          Integer pInventoryId
    ) {
        InventoryInStock f = new InventoryInStock();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Get <code>inventory_in_stock</code> as a field.
     */
    public static Field<Boolean> inventoryInStock(
          Field<Integer> pInventoryId
    ) {
        InventoryInStock f = new InventoryInStock();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Call <code>last_day</code>
     */
    public static LocalDate lastDay(
          Configuration configuration
        , LocalDateTime __1
    ) {
        LastDay f = new LastDay();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>last_day</code> as a field.
     */
    public static Field<LocalDate> lastDay(
          LocalDateTime __1
    ) {
        LastDay f = new LastDay();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>last_day</code> as a field.
     */
    public static Field<LocalDate> lastDay(
          Field<LocalDateTime> __1
    ) {
        LastDay f = new LastDay();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>film_in_stock</code>.
     */
    public static Result<FilmInStockRecord> filmInStock(
          Configuration configuration
        , Integer pFilmId
        , Integer pStoreId
    ) {
        return configuration.dsl().selectFrom(top.oatnil.dbmlfromjooq.demo.generated.tables.FilmInStock.FILM_IN_STOCK.call(
              pFilmId
            , pStoreId
        )).fetch();
    }

    /**
     * Get <code>film_in_stock</code> as a table.
     */
    public static FilmInStock filmInStock(
          Integer pFilmId
        , Integer pStoreId
    ) {
        return top.oatnil.dbmlfromjooq.demo.generated.tables.FilmInStock.FILM_IN_STOCK.call(
            pFilmId,
            pStoreId
        );
    }

    /**
     * Get <code>film_in_stock</code> as a table.
     */
    public static FilmInStock filmInStock(
          Field<Integer> pFilmId
        , Field<Integer> pStoreId
    ) {
        return top.oatnil.dbmlfromjooq.demo.generated.tables.FilmInStock.FILM_IN_STOCK.call(
            pFilmId,
            pStoreId
        );
    }

    /**
     * Call <code>film_not_in_stock</code>.
     */
    public static Result<FilmNotInStockRecord> filmNotInStock(
          Configuration configuration
        , Integer pFilmId
        , Integer pStoreId
    ) {
        return configuration.dsl().selectFrom(top.oatnil.dbmlfromjooq.demo.generated.tables.FilmNotInStock.FILM_NOT_IN_STOCK.call(
              pFilmId
            , pStoreId
        )).fetch();
    }

    /**
     * Get <code>film_not_in_stock</code> as a table.
     */
    public static FilmNotInStock filmNotInStock(
          Integer pFilmId
        , Integer pStoreId
    ) {
        return top.oatnil.dbmlfromjooq.demo.generated.tables.FilmNotInStock.FILM_NOT_IN_STOCK.call(
            pFilmId,
            pStoreId
        );
    }

    /**
     * Get <code>film_not_in_stock</code> as a table.
     */
    public static FilmNotInStock filmNotInStock(
          Field<Integer> pFilmId
        , Field<Integer> pStoreId
    ) {
        return top.oatnil.dbmlfromjooq.demo.generated.tables.FilmNotInStock.FILM_NOT_IN_STOCK.call(
            pFilmId,
            pStoreId
        );
    }

    /**
     * Call <code>rewards_report</code>.
     */
    public static Result<RewardsReportRecord> rewardsReport(
          Configuration configuration
        , Integer minMonthlyPurchases
        , BigDecimal minDollarAmountPurchased
    ) {
        return configuration.dsl().selectFrom(top.oatnil.dbmlfromjooq.demo.generated.tables.RewardsReport.REWARDS_REPORT.call(
              minMonthlyPurchases
            , minDollarAmountPurchased
        )).fetch();
    }

    /**
     * Get <code>rewards_report</code> as a table.
     */
    public static RewardsReport rewardsReport(
          Integer minMonthlyPurchases
        , BigDecimal minDollarAmountPurchased
    ) {
        return top.oatnil.dbmlfromjooq.demo.generated.tables.RewardsReport.REWARDS_REPORT.call(
            minMonthlyPurchases,
            minDollarAmountPurchased
        );
    }

    /**
     * Get <code>rewards_report</code> as a table.
     */
    public static RewardsReport rewardsReport(
          Field<Integer> minMonthlyPurchases
        , Field<BigDecimal> minDollarAmountPurchased
    ) {
        return top.oatnil.dbmlfromjooq.demo.generated.tables.RewardsReport.REWARDS_REPORT.call(
            minMonthlyPurchases,
            minDollarAmountPurchased
        );
    }
}

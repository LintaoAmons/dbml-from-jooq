/*
 * This file is generated by jOOQ.
 */
package top.oatnil.dbmlfromjooq.demo.generated.routines


import java.time.LocalDate
import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType

import top.oatnil.dbmlfromjooq.demo.generated.DefaultSchema


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class LastDay : AbstractRoutine<LocalDate>("last_day", DefaultSchema.DEFAULT_SCHEMA, SQLDataType.LOCALDATE) {
    companion object {

        /**
         * The parameter <code>last_day.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<LocalDate?> = Internal.createParameter("RETURN_VALUE", SQLDataType.LOCALDATE, false, false)

        /**
         * The parameter <code>last_day._1</code>.
         */
        val _1: Parameter<LocalDateTime?> = Internal.createParameter("_1", SQLDataType.LOCALDATETIME(6), false, true)
    }

    init {
        returnParameter = RETURN_VALUE
        addInParameter(_1)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: LocalDateTime?): Unit = setValue(_1, value)

    /**
     * Set the <code>_1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__1(field: Field<LocalDateTime?>): LastDay {
        setField(_1, field)
        return this
    }
}
